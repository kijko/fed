/*
 * This file is generated by jOOQ.
 */
package pl.edu.prz.baw.houston.fed.db.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import pl.edu.prz.baw.houston.fed.db.tables.TransferRequest;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransferRequestRecord extends UpdatableRecordImpl<TransferRequestRecord> implements Record7<String, String, String, String, String, BigDecimal, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transfer_request.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.transfer_request.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.transfer_request.from_account</code>.
     */
    public void setFromAccount(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.transfer_request.from_account</code>.
     */
    public String getFromAccount() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.transfer_request.to_account</code>.
     */
    public void setToAccount(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.transfer_request.to_account</code>.
     */
    public String getToAccount() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.transfer_request.status</code>.
     */
    public void setStatus(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.transfer_request.status</code>.
     */
    public String getStatus() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.transfer_request.finalized_by</code>.
     */
    public void setFinalizedBy(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.transfer_request.finalized_by</code>.
     */
    public String getFinalizedBy() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.transfer_request.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.transfer_request.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.transfer_request.requested_at</code>.
     */
    public void setRequestedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.transfer_request.requested_at</code>.
     */
    public LocalDateTime getRequestedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, BigDecimal, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, String, BigDecimal, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TransferRequest.TRANSFER_REQUEST.ID;
    }

    @Override
    public Field<String> field2() {
        return TransferRequest.TRANSFER_REQUEST.FROM_ACCOUNT;
    }

    @Override
    public Field<String> field3() {
        return TransferRequest.TRANSFER_REQUEST.TO_ACCOUNT;
    }

    @Override
    public Field<String> field4() {
        return TransferRequest.TRANSFER_REQUEST.STATUS;
    }

    @Override
    public Field<String> field5() {
        return TransferRequest.TRANSFER_REQUEST.FINALIZED_BY;
    }

    @Override
    public Field<BigDecimal> field6() {
        return TransferRequest.TRANSFER_REQUEST.AMOUNT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return TransferRequest.TRANSFER_REQUEST.REQUESTED_AT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFromAccount();
    }

    @Override
    public String component3() {
        return getToAccount();
    }

    @Override
    public String component4() {
        return getStatus();
    }

    @Override
    public String component5() {
        return getFinalizedBy();
    }

    @Override
    public BigDecimal component6() {
        return getAmount();
    }

    @Override
    public LocalDateTime component7() {
        return getRequestedAt();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFromAccount();
    }

    @Override
    public String value3() {
        return getToAccount();
    }

    @Override
    public String value4() {
        return getStatus();
    }

    @Override
    public String value5() {
        return getFinalizedBy();
    }

    @Override
    public BigDecimal value6() {
        return getAmount();
    }

    @Override
    public LocalDateTime value7() {
        return getRequestedAt();
    }

    @Override
    public TransferRequestRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public TransferRequestRecord value2(String value) {
        setFromAccount(value);
        return this;
    }

    @Override
    public TransferRequestRecord value3(String value) {
        setToAccount(value);
        return this;
    }

    @Override
    public TransferRequestRecord value4(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public TransferRequestRecord value5(String value) {
        setFinalizedBy(value);
        return this;
    }

    @Override
    public TransferRequestRecord value6(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public TransferRequestRecord value7(LocalDateTime value) {
        setRequestedAt(value);
        return this;
    }

    @Override
    public TransferRequestRecord values(String value1, String value2, String value3, String value4, String value5, BigDecimal value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransferRequestRecord
     */
    public TransferRequestRecord() {
        super(TransferRequest.TRANSFER_REQUEST);
    }

    /**
     * Create a detached, initialised TransferRequestRecord
     */
    public TransferRequestRecord(String id, String fromAccount, String toAccount, String status, String finalizedBy, BigDecimal amount, LocalDateTime requestedAt) {
        super(TransferRequest.TRANSFER_REQUEST);

        setId(id);
        setFromAccount(fromAccount);
        setToAccount(toAccount);
        setStatus(status);
        setFinalizedBy(finalizedBy);
        setAmount(amount);
        setRequestedAt(requestedAt);
        resetChangedOnNotNull();
    }
}
