buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath group: 'org.jooq', name: 'jooq', version: '3.18.7'
		classpath group: 'org.jooq', name: 'jooq-meta', version: '3.18.7'
		classpath group: 'org.jooq', name: 'jooq-codegen', version: '3.18.7'
		classpath group: 'org.postgresql', name: 'postgresql', version: '42.7.1'
	}
}

plugins {
	id 'groovy'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'pl.edu.prz.baw.houston'
version = '1.0.0'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.apache.groovy:groovy'

	// DB
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.1'

	// SPRING
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'

    // JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('genDbClasses') {
	doLast {
		def conf = new org.jooq.meta.jaxb.Configuration()
				.withJdbc(new org.jooq.meta.jaxb.Jdbc()
						.withDriver("org.postgresql.Driver")
						.withUrl("jdbc:postgresql://localhost:5432/fed")
						.withUser("postgres")
						.withPassword("postgres")
				)
				.withGenerator(new org.jooq.meta.jaxb.Generator()
						.withDatabase(new org.jooq.meta.jaxb.Database()
								.withName("org.jooq.meta.postgres.PostgresDatabase")
								.withIncludes(".*")
								.withInputSchema("public")
						)
						.withGenerate()
						.withTarget(new org.jooq.meta.jaxb.Target()
								.withPackageName("pl.edu.prz.baw.houston.fed.db")
								.withDirectory("${project.rootDir}/src/main/java")
						)
				)

		org.jooq.codegen.GenerationTool.generate(conf)
	}
}
